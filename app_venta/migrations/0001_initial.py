# Generated by Django 4.0.2 on 2025-06-28 23:48

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_cliente', '0001_initial'),
        ('app_reg_empresa', '0005_rename_app_cliente_produccion_cliente'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app_contabilidad_planCuentas', '0014_alter_encabezadocuentasplancuenta_proveedor'),
        ('app_categoria', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voucher_number', models.CharField(max_length=9, verbose_name='Número de comprobante')),
                ('voucher_number_full', models.CharField(max_length=20, verbose_name='Número de comprobante completo')),
                ('payment_type', models.CharField(choices=[('efectivo', 'Efectivo'), ('credito', 'Credito')], default='efectivo', max_length=50, verbose_name='Tipo de pago')),
                ('payment_method', models.CharField(choices=[('01', 'SIN UTILIZACION DEL SISTEMA FINANCIERO'), ('15', 'COMPENSACIÓN DE DEUDAS'), ('16', 'TARJETA DE DÉBITO'), ('17', 'DINERO ELECTRÓNICO'), ('18', 'TARJETA PREPAGO'), ('20', 'OTROS CON UTILIZACION DEL SISTEMA FINANCIERO'), ('21', 'ENDOSO DE TÍTULOS')], default='20', max_length=50, verbose_name='Método de pago')),
                ('time_limit', models.IntegerField(default=31, verbose_name='Plazo')),
                ('creation_date', models.DateTimeField(default=datetime.datetime.now, verbose_name='Fecha y hora de registro')),
                ('date_joined', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de registro')),
                ('end_credit', models.DateField(default=datetime.datetime.now, verbose_name='Fecha limite de credito')),
                ('additional_info', models.JSONField(default=dict, verbose_name='Información adicional')),
                ('subtotal_12', models.DecimalField(decimal_places=2, default=0.0, max_digits=9, verbose_name='Subtotal')),
                ('subtotal_0', models.DecimalField(decimal_places=2, default=0.0, max_digits=9, verbose_name='Subtotal 0%')),
                ('total_dscto', models.DecimalField(decimal_places=2, default=0.0, max_digits=9, verbose_name='Valor del descuento')),
                ('iva', models.DecimalField(decimal_places=2, default=0.0, max_digits=9, verbose_name='Iva')),
                ('total_iva', models.DecimalField(decimal_places=2, default=0.0, max_digits=9, verbose_name='Valor de iva')),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=9, verbose_name='Total a pagar')),
                ('cash', models.DecimalField(decimal_places=2, default=0.0, max_digits=9, verbose_name='Efectivo recibido')),
                ('change', models.DecimalField(decimal_places=2, default=0.0, max_digits=9, verbose_name='Cambio')),
                ('environment_type', models.PositiveIntegerField(choices=[(1, 'PRUEBAS'), (2, 'PRODUCCIÓN')], default=1)),
                ('access_code', models.CharField(blank=True, max_length=49, null=True, verbose_name='Clave de acceso')),
                ('authorization_date', models.DateField(blank=True, null=True, verbose_name='Fecha de emisión')),
                ('xml_authorized', models.FileField(blank=True, null=True, upload_to='', verbose_name='XML Autorizado')),
                ('pdf_authorized', models.FileField(blank=True, null=True, upload_to='pdf_authorized/%Y/%m/%d', verbose_name='PDF Autorizado')),
                ('create_electronic_invoice', models.BooleanField(default=True, verbose_name='Crear factura electrónica')),
                ('status', models.CharField(choices=[('without_authorizing', 'Sin Autorizar'), ('authorized', 'Autorizada'), ('authorized_and_sent_by_email', 'Autorizada y enviada por email'), ('canceled', 'Anulado'), ('sequential_registered_error', 'Error de secuencial registrado')], default='without_authorizing', max_length=50, verbose_name='Estado')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app_cliente.client', verbose_name='Cliente')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app_reg_empresa.empresa', verbose_name='Compañia')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Empleado')),
                ('receipt', models.ForeignKey(limit_choices_to={'voucher_type__in': ['01', '07']}, on_delete=django.db.models.deletion.PROTECT, to='app_contabilidad_planCuentas.recibo', verbose_name='Tipo de comprobante')),
            ],
            options={
                'verbose_name': 'Venta',
                'verbose_name_plural': 'Ventas',
                'db_table': 'tb_venta',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SaleDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cant', models.IntegerField(default=0)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=9)),
                ('price_with_vat', models.DecimalField(decimal_places=2, default=0.0, max_digits=9)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=9)),
                ('iva', models.DecimalField(decimal_places=2, default=0.0, max_digits=9)),
                ('total_iva', models.DecimalField(decimal_places=2, default=0.0, max_digits=9)),
                ('dscto', models.DecimalField(decimal_places=2, default=0.0, max_digits=9)),
                ('total_dscto', models.DecimalField(decimal_places=2, default=0.0, max_digits=9)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=9)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app_categoria.producto')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_venta.sale')),
            ],
            options={
                'verbose_name': 'Detalle de Venta',
                'verbose_name_plural': 'Detalle de Ventas',
                'db_table': 'tb_detVenta',
                'ordering': ['id'],
            },
        ),
    ]
